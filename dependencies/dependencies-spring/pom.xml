<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.mendirl</groupId>
        <artifactId>dependencies-common</artifactId>
        <version>${revision}</version>
        <relativePath>../dependencies-common</relativePath>
    </parent>

    <artifactId>dependencies-spring</artifactId>

    <packaging>pom</packaging>

    <properties>
        <spring-boot.build-image.skip>true</spring-boot.build-image.skip>

        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies -->
        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-maven-plugin -->
        <spring-boot.version>3.0.1</spring-boot.version>
        <spring-native.version>0.12.1</spring-native.version>
        <spring-cloud-contract.version>3.1.5</spring-cloud-contract.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.mendirl</groupId>
                <artifactId>spring-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>io.mendirl</groupId>
                <artifactId>spring-common-test</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-dependencies -->
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>2022.0.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <!-- https://mvnrepository.com/artifact/de.codecentric/spring-boot-admin-dependencies -->
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-dependencies</artifactId>
                <version>2.7.9</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger2 -->
                <groupId>io.springfox</groupId>
                <artifactId>springfox-boot-starter</artifactId>
                <version>3.0.0</version>
            </dependency>
            <dependency>
                <!-- https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-webflux-ui -->
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-webflux-ui</artifactId>
                <version>1.6.14</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/application*.yml</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <excludes>
                    <exclude>**/application*.yml</exclude>
                </excludes>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <!-- https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/html/ -->
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <!-- https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/html/#goals-build-info -->
                                <goal>build-info</goal>
                                <!-- https://docs.spring.io/spring-boot/docs/current/maven-plugin/reference/html/#build-image -->
                                <goal>build-image</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.springframework.experimental</groupId>
                    <artifactId>spring-aot-maven-plugin</artifactId>
                    <version>${spring-native.version}</version>
                </plugin>
                <plugin>
                    <!-- https://cloud.spring.io/spring-cloud-contract/spring-cloud-contract-maven-plugin/plugin-info.html -->
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-contract-maven-plugin</artifactId>
                    <version>${spring-cloud-contract.version}</version>
                    <extensions>true</extensions>
                    <configuration>
                        <testFramework>JUNIT5</testFramework>
                        <testMode>WEBTESTCLIENT</testMode>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.springframework.cloud</groupId>
                            <artifactId>spring-cloud-contract-spec-kotlin</artifactId>
                            <version>${spring-cloud-contract.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <configuration>
                        <compilerPlugins>
                            <plugin>spring</plugin>
                        </compilerPlugins>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/classes</outputDirectory>
                            <useDefaultDelimiters>false</useDefaultDelimiters>
                            <delimiters>
                                <delimiter>#</delimiter>
                            </delimiters>
                            <resources>
                                <resource>
                                    <directory>src/main/resources/</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>**/*.xml</include>
                                        <include>**/*.yml</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>src/main/resources/</directory>
                                    <filtering>false</filtering>
                                    <excludes>
                                        <exclude>**/*.xml</exclude>
                                        <exclude>**/*.yml</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>dev</id>
        </profile>
        <profile>
            <id>docker</id>
            <properties>
                <spring-boot.build-image.skip>false</spring-boot.build-image.skip>
                <spring-boot.build-image.imageName>
                    ${docker.registry.url}/${docker.owner}/${docker.repository}/${docker.image.name}:${docker.image.version}
                </spring-boot.build-image.imageName>
            </properties>
        </profile>
        <profile>
            <id>dockerPush</id>
            <properties>
                <spring-boot.build-image.skip>false</spring-boot.build-image.skip>
                <spring-boot.build-image.publish>true</spring-boot.build-image.publish>
                <spring-boot.build-image.imageName>
                    ${docker.registry.url}/${docker.owner}/${docker.repository}/${docker.image.name}:${docker.image.version}
                </spring-boot.build-image.imageName>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-maven-plugin</artifactId>
                            <configuration>
                                <docker>
                                    <publishRegistry>
                                        <url>${docker.registry.url}</url>
                                        <username>${docker.registry.username}</username>
                                        <password>${docker.registry.password}</password>
                                    </publishRegistry>
                                </docker>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>native</id>
            <properties>
                <java.version>11</java.version>
                <spring-boot.build-image.imageName>
                    ${docker.registry.url}/${docker.owner}/${docker.repository}/${docker.image.name}:${docker.image.version}-native
                </spring-boot.build-image.imageName>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-maven-plugin</artifactId>
                            <configuration>
                                <image>
                                    <builder>paketobuildpacks/builder:tiny</builder>
                                    <env>
                                        <BP_BOOT_NATIVE_IMAGE>true</BP_BOOT_NATIVE_IMAGE>
                                    </env>
                                </image>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.springframework.experimental</groupId>
                            <artifactId>spring-aot-maven-plugin</artifactId>
                            <dependencies>
                                <dependency>
                                    <groupId>org.springframework.experimental</groupId>
                                    <artifactId>spring-native</artifactId>
                                    <version>${spring-native.version}</version>
                                </dependency>
                            </dependencies>
                            <executions>
                                <execution>
                                    <id>test-generate</id>
                                    <goals>
                                        <goal>test-generate</goal>
                                    </goals>
                                </execution>
                                <execution>
                                    <id>generate</id>
                                    <goals>
                                        <goal>generate</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

</project>
